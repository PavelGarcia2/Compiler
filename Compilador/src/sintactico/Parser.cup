/**
 Per compilar aquest fitxer s'ha d'haver instal·lat JavaCup

  java -jar java-cup-11b.jar Parser.cup
 **/

/**
 * Assignatura 21742 - Compiladors I 
 * Estudis: Grau en Informàtica 
 * Itinerari: Computació 
 * Curs: 2017-2018
 *
 * Professor: Pere Palmer
 */
package sintactico;

import java_cup.runtime.*;

class Parser;

/**
 ** Aquí es podria posar un codi 'ad hoc' però en aquest cas no és necessari.
parser code {:
    private Scanner scanner;
    public Parser(Scanner scanner) { 
        this.scanner = scanner;
    }
:}
**/

/**
 ** També aquí es poden afegir accions a realitzar quan es requereix un token.
scan with {:     next_token(); :}
**/

/*
De los terminales capaz falte definir cual es un int, char, string, etc.
*/

terminal t_program,t_return,t_exec,t_fun,t_in,t_sys,t_and,t_or,t_not,t_asignacion;

terminal t_suma,t_resta,t_multiplicacion,t_division,t_modulo,t_mayor,t_menor,t_igualMayor,t_igualMenor,t_igual;
    
terminal t_new,t_case,t_break,t_default;

terminal t_if,t_else,t_elif,t_while,t_for,t_switch;

terminal t_char,t_float,t_int,t_bool,t_str,t_const,t_tupla,t_array,t_lineaCaracteres,t_caracter,t_decimal,t_true,t_false;

terminal t_print,t_println,t_id,t_numero,t_saltoLinea,t_rParentesis,t_lParentesis,t_rBracket,t_lBracket,t_rCorchete,t_lCorchete,t_coma,t_puntoComa,t_punto,t_dosPuntos,t_Error;



non terminal PROGRAMA;
non terminal MAIN;
non terminal DECL_VARS;
non terminal DECL_VAR;
non terminal DECL_ESP;
non terminal DECL_ARRAY;
non terminal DECL_TUPLA;
non terminal ASIGN;
non terminal T_ASIGN;
non terminal ASIGN_NORMAL;
non terminal ASIGN_ARRAY;
non terminal DIM_ARRAY;
non terminal ASIGN_TUPLA;
non terminal DIM_TUPLA;
non terminal REAL_ASIGN;
non terminal TIPO;
non terminal FUNC;
non terminal DECL_FUNCIONES;
non terminal SENTS;
non terminal SENT;
non terminal OTRAS_SENTS;
non terminal CASOS;
non terminal CASO_DEFAULT;
non terminal INIT_CASES;
non terminal OP_LOG;
non terminal OP_ARIT;
non terminal OP_RAPIDOS;
non terminal OP_RAPIDO_S;
non terminal OP_RAPIDO_R;
non terminal TERMINO_1;
non terminal TERMINO_2;
non terminal TERMINOLOG_1;
non terminal TERMINOLOG_2;
non terminal EXPRESION_ARITM;
non terminal EXPRESION_LOG;
non terminal EXPRESION;
non terminal LLAMADA_FUNC;
non terminal PARAMETROS;
non terminal PARAM_SIMPLE;
non terminal PARAM_COMPUESTO;


start with PROGRAMA;

PROGRAMA ::= DECL_VARS MAIN DECL_FUNCIONES                                                                                                                  {::}
           ;


MAIN ::= t_exec t_lBracket SENTS t_rBracket                                                                                                                 {::}
        ;
 
 
DECL_VARS ::= DECL_VAR DECL_VARS                                                                                                                            {::}
             |                                                                                                                                              {::}
		     ;

DECL_VAR ::= TIPO t_id DECL_ESP ASIGN  t_puntoComa                                                                                                          {::}
          ; 

DECL_ESP ::= DECL_ARRAY                                                                                                                                     {::}
            | DECL_TUPLA                                                                                                                                    {::}
            ;

DECL_ARRAY ::= DECL_ARRAY t_lCorchete t_rCorchete                                                                                                           {::}
               |                                                                                                                                            {::}
		       ;

DECL_TUPLA ::= t_lParentesis TIPO t_coma TIPO t_rParentesis                                                                                                 {::}
            ;

ASIGN ::= t_asignacion T_ASIGN                                                                                                                              {::} 
            ; 

T_ASIGN ::= ASIGN_NORMAL                                                                                                                                    {::}
            | ASIGN_ARRAY                                                                                                                                   {::}
            | ASIGN_TUPLA                                                                                                                                   {::}                
            ;

ASIGN_NORMAL ::= EXPRESION                                                                                                                                  {::}
                ;

ASIGN_ARRAY ::= t_new TIPO DIM_ARRAY                                                                                                                        {::}
                ;

DIM_ARRAY ::= DIM_ARRAY t_lCorchete EXPRESION t_rCorchete                                                                                                   {::}
            |                                                                                                                                               {::}
		    ;

ASIGN_TUPLA ::= t_new t_tupla DIM_TUPLA                                                                                                                     {::}
                ;

DIM_TUPLA ::= t_lParentesis EXPRESION t_coma EXPRESION t_rParentesis                                                                                        {::}
            ;

REAL_ASIGN ::= t_id t_asignacion EXPRESION t_puntoComa                                                                                                      {::}
            ;

TIPO ::= t_int                                                                                                                                              {::}
    | t_char                                                                                                                                                {::}
    | t_float                                                                                                                                               {::}                                     
    | t_bool                                                                                                                                                {::}                            
    | t_tupla                                                                                                                                               {::}    
    | t_str                                                                                                                                                 {::}                     
	;

/*******         las declaraciones iría antes que las instrucciones ----v----         *******/
FUNC ::= t_fun TIPO DECL_ARRAY t_id t_lParentesis PARAMETROS t_rParentesis t_lCorchete DECL_VARS SENTS t_rCorchete                                          {::}
    ;

/* ** QUITAR ESTAS PRODUCCIONES (quitadas Pedro 18-12-23)
 ** */

DECL_FUNCIONES ::= DECL_FUNCIONES FUNC                                                                                                                      {::}
              |                                                                                                                                             {::}
			  ;
			  
SENTS ::= SENTS SENT                                                                                                                                        {::}
        |                                                                                                                                                   {::}
	    ;

SENT ::= OTRAS_SENTS                                                                                                                                        {::}
        | REAL_ASIGN                                                                                                                                        {::}
        ;


OTRAS_SENTS ::= t_if t_lParentesis PARAMETROS t_rParentesis t_lCorchete SENTS t_rCorchete                                                                   {::}                                                 
           | t_while t_lParentesis PARAMETROS t_rParentesis t_lCorchete SENTS t_rCorchete                                                                   {::}                      
           | t_for t_lParentesis t_id t_puntoComa EXPRESION t_puntoComa OP_RAPIDOS t_rParentesis t_lCorchete SENTS t_rCorchete                              {::}
           | t_switch t_lParentesis t_id t_rParentesis t_lCorchete CASOS t_rCorchete                                                                        {::}    
           ;


CASOS ::= CASOS t_case INIT_CASES t_dosPuntos SENTS t_break t_puntoComa                                                                                     {::}    
     | CASO_DEFAULT                                                                                                                                         {::}
     |                                                                                                                                                      {::}                                                
	 ;

CASO_DEFAULT ::= t_default t_dosPuntos SENTS t_break t_puntoComa                                                                                            {::}
                ;

INIT_CASES ::= t_numero                                                                                                                                     {::}
          | t_lineaCaracteres                                                                                                                               {::}
          | t_caracter                                                                                                                                      {::}
		  ;

OP_LOG ::= t_and                                                                                                                                            {::}
      | t_or                                                                                                                                                {::}
      | t_mayor                                                                                                                                             {::}
      | t_menor                                                                                                                                             {::}
      | t_igualMayor                                                                                                                                        {::}
      | t_igualMenor                                                                                                                                        {::}
      | t_igual                                                                                                                                             {::}
	  ;

OP_ARIT ::= t_suma                                                                                                                                          {::}
       | t_resta                                                                                                                                            {::}
       | t_multiplicacion                                                                                                                                   {::}
       | t_division                                                                                                                                         {::}
       | t_modulo                                                                                                                                           {::}
	   ;

OP_RAPIDOS ::= OP_RAPIDO_S                                                                                                                                  {::}
          | OP_RAPIDO_R                                                                                                                                     {::}
          ;

OP_RAPIDO_S ::= t_id t_suma  t_suma                                                                                                                         {::}
            ;

OP_RAPIDO_R ::= t_id t_resta t_resta                                                                                                                        {::}
            ;

TERMINO_1 ::= t_id                                                                                                                                          {::}
         | t_numero                                                                                                                                         {::}
         | LLAMADA_FUNC                                                                                                                                     {::}
         | t_decimal                                                                                                                                        {::}
         ;

/* PREGUNTAR COMO SE PUEDE HACER PARA QUE UN TERMINO PUEDA SER UN ENTERO Y UN REAL*/
TERMINO_2 ::= t_id                                                                                                                                          {::}
         | t_numero                                                                                                                                         {::}
         | LLAMADA_FUNC                                                                                                                                     {::}
         | t_decimal                                                                                                                                        {::}
         ;

TERMINOLOG_1 ::= t_id                                                                                                                                       {::}
         | t_true                                                                                                                                           {::}
         | t_false                                                                                                                                          {::}
         | LLAMADA_FUNC                                                                                                                                     {::}
         ;
 
TERMINOLOG_2 ::= t_id                                                                                                                                       {::}
         | t_true                                                                                                                                           {::}
         | t_false                                                                                                                                          {::}
         | LLAMADA_FUNC                                                                                                                                     {::}
         ;


EXPRESION_ARITM ::= TERMINO_1 OP_ARIT TERMINO_2                                                                                                             {:$$ = $1 $2 $3:}
                ;       
               
EXPRESION_LOG ::= TERMINOLOG_1 OP_LOG TERMINOLOG_2                                                                                                          {::}
                ;

EXPRESION ::= t_lParentesis EXPRESION t_rParentesis                                                                                                         {::}
         | t_not EXPRESION                                                                                                                                  {::}
         | EXPRESION_LOG                                                                                                                                    {::}
         | EXPRESION_ARITM                                                                                                                                  {::}
         | t_id                                                                                                                                             {::}
         | t_numero                                                                                                                                         {::}
         | t_decimal                                                                                                                                        {::}
         | t_char                                                                                                                                           {::}
         | t_lineaCaracteres                                                                                                                                {::}
         | LLAMADA_FUNC                                                                                                                                     {::}
		 ;

LLAMADA_FUNC ::= t_id t_lParentesis PARAMETROS t_rParentesis t_puntoComa                                                                                    {::}
                ;

PARAMETROS ::= PARAM_SIMPLE                                                                                                                                 {::}
          | PARAM_COMPUESTO                                                                                                                                 {::}
		  ;

PARAM_SIMPLE ::= EXPRESION                                                                                                                                  {::}
        ;

PARAM_COMPUESTO ::= PARAMETROS t_coma EXPRESION                                                                                                             {::}
    ;