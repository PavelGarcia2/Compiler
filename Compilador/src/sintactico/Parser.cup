/**
 Per compilar aquest fitxer s'ha d'haver instal·lat JavaCup

  java -jar java-cup-11b.jar Parser.cup
 **/

/**
 * Assignatura 21742 - Compiladors I 
 * Estudis: Grau en Informàtica 
 * Itinerari: Computació 
 * Curs: 2017-2018
 *
 * Professor: Pere Palmer
 */
package sintactico;

import java_cup.runtime.*;

class Parser;

/**
 ** Aquí es podria posar un codi 'ad hoc' però en aquest cas no és necessari.
 **/
parser code {:
/*
    private Scanner scanner;
    public Parser(Scanner scanner) { 
        this.scanner = scanner;
    }
*/
:}

/**
 ** També aquí es poden afegir accions a realitzar quan es requereix un token.
scan with {:     next_token(); :}
**/

/*
De los terminales capaz falte definir cual es un int, char, string, etc.
*/

terminal ComplexSymbol tReturn,tMain,tFun,tIn,tSys,tAnd,tOr,tNot,tIgual;

terminal ComplexSymbol tSuma,tResta,tMult,tDiv,tMod,tMayor,tMenor,tIgualMay,tIgualMenor,tIgualIgual;
    
terminal ComplexSymbol tNew,tCase,tBreak,tDefault;

terminal ComplexSymbol tIf,tElse,tElif,tWhile,tFor,tSwitch;

terminal ComplexSymbol tChar,tFloat,tInt,tBool,tStr,tConst,tArray,tLinea,tCaracter,tDecimal,tTrue,tFalse;

terminal ComplexSymbol tPrint,tPrintln,tId,tEntero,tRparen,tLparen,tRbracket,tLbracket,tRcorchete,tLcorchete,tComa,tPuntocoma,tPunto,tDospuntos,tError,tVoid;



non terminal PROGRAMA;
non terminal MAIN;
non terminal DECL_VARS;
non terminal DECL_VAR;
non terminal DECL_ARRAY;
non terminal ASIGN;
non terminal T_ASIGN;
non terminal ASIGN_NORMAL;
non terminal ASIGN_ARRAY;
non terminal DIM_ARRAY;
non terminal REAL_ASIGN;
non terminal TIPO;
non terminal FUNC;
non terminal DECL_FUNCIONES;
non terminal SENTS;
non terminal SENT;
non terminal OTRAS_SENTS;
non terminal CASOS;
non terminal CASO_DEFAULT;
non terminal INIT_CASES;
non terminal OP_LOG;
non terminal OP_ARIT;
non terminal OP_RAPIDOS;
non terminal OP_RAPIDO_S;
non terminal OP_RAPIDO_R;
non terminal TERMINO_1;
non terminal TERMINO_2;
non terminal TERMINOLOG_1;
non terminal TERMINOLOG_2;
non terminal EXPRESION_ARITM;
non terminal EXPRESION_LOG;
non terminal EXPRESION;
non terminal LLAMADA_FUNC;
non terminal PARAMETROS;
non terminal PARAM_SIMPLE;
non terminal PARAM_COMPUESTO;
non terminal ELSE_COND;
non terminal DECL_FUNCP;
non terminal DECL_FUNCPARAMS;
non terminal DECL_FUNCPARAM;
non terminal RETURN;
non terminal DECLVAR;
non terminal TIPOINSENTENCES;




start with PROGRAMA;

PROGRAMA ::= DECL_VARS MAIN DECL_FUNCIONES                                                                                                                 {::}
           ;


MAIN ::= tMain tLbracket DECL_VARS SENTS tRbracket                                                                                                         {::}
        ;
 
 
DECL_VARS ::= DECL_VAR DECL_VARS                                                                                                                           {::}
             |                                                                                                                                             {::}
		     ;

DECL_VAR ::= TIPO tId DECL_ARRAY ASIGN  tPuntocoma                                                                                                         {::}
          ; 

DECL_ARRAY ::= DECL_ARRAY tLcorchete tRcorchete                                                                                                            {::}
               |                                                                                                                                           {::}
		       ;

ASIGN ::= tIgual T_ASIGN                                                                                                                                   {::} 
          |                                                                                                                                                {::} 
          ; 

T_ASIGN ::= ASIGN_NORMAL                                                                                                                                   {::}
            | ASIGN_ARRAY                                                                                                                                  {::}         
            ;

ASIGN_NORMAL ::= EXPRESION                                                                                                                                 {::}
                ;

ASIGN_ARRAY ::= tNew TIPO DIM_ARRAY                                                                                                                        {::}
                ;

DIM_ARRAY ::= DIM_ARRAY tLcorchete EXPRESION tRcorchete                                                                                                    {::}
            |                                                                                                                                              {::}
		    ;

REAL_ASIGN ::= tId tIgual EXPRESION tPuntocoma                                                                                                             {::}
            ;

TIPO ::= tInt                                                                                                                                              {::}
    | tCaracter                                                                                                                                            {::}
    | tFloat                                                                                                                                               {::}                                     
    | tBool                                                                                                                                                {::}                               
    | tStr                                                                                                                                                 {::}                                       
    | tVoid                                                                                                                                                {::}                     
	;


FUNC ::= tFun TIPO DECL_ARRAY tId tLparen DECL_FUNCP tRparen tLbracket DECL_VARS SENTS RETURN tRbracket                                                    {::}
    ;

RETURN ::= tReturn EXPRESION tPuntocoma                                                                                                                    {::}                                                                                                                           
        |                                                                                                                                                  {::} 
        ;

DECL_FUNCP ::= DECL_FUNCPARAMS                                                                                                                             {::}
               |                                                                                                                                           {::}
               ;

DECL_FUNCPARAMS ::= DECL_FUNCPARAM 
                    |DECL_FUNCPARAM tComa DECL_FUNCPARAMS 
                    ;

DECL_FUNCPARAM ::= TIPO tId DECL_ARRAY;

DECL_FUNCIONES ::= DECL_FUNCIONES FUNC                                                                                                                     {::}
              |                                                                                                                                            {::}
			  ;
			  
SENTS ::= SENTS SENT                                                                                                                                       {::}
        |                                                                                                                                                  {::}
	    ;

SENT ::= OTRAS_SENTS                                                                                                                                       {::}
        | REAL_ASIGN                                                                                                                                       {::}
        ;


OTRAS_SENTS ::= tIf tLparen PARAMETROS tRparen tLbracket SENTS tRbracket ELSE_COND                                                                         {::}                                                 
           | tWhile tLparen PARAMETROS tRparen tLbracket SENTS tRbracket                                                                                   {::}                      
           | tFor tLparen tId tPuntocoma EXPRESION tPuntocoma OP_RAPIDOS tRparen tLbracket SENTS tRbracket                                                 {::}
           | tSwitch tLparen tId tRparen tLbracket CASOS tRbracket                                                                                         {::}    
           | tPrint tLparen EXPRESION tRparen tPuntocoma                                                                                                   {::}
           | tPrintln tLparen EXPRESION tRparen tPuntocoma                                                                                                 {::}  
           | LLAMADA_FUNC tPuntocoma                                                                                                                       {::}
           ;



ELSE_COND ::= tElif tLparen EXPRESION tRparen tLbracket SENTS tRbracket  ELSE_COND                                                                         {::}
          | tElse tLbracket SENTS tRbracket                                                                                                                {::}                                      
          |                                                                                                                                                {::}                   
          ; 

CASOS ::= CASOS tCase INIT_CASES tDospuntos SENTS tBreak tPuntocoma                                                                                        {::}    
     | CASO_DEFAULT                                                                                                                                        {::}
     |                                                                                                                                                     {::}                                                
	 ;

CASO_DEFAULT ::= tDefault tDospuntos SENTS tBreak tPuntocoma                                                                                               {::}
                ;

INIT_CASES ::= tEntero                                                                                                                                     {::}
          | tLinea                                                                                                                                         {::}
          | tCaracter                                                                                                                                      {::}
		  ;

OP_LOG ::= tAnd                                                                                                                                            {::}
      | tOr                                                                                                                                                {::}
      | tMayor                                                                                                                                             {::}
      | tMenor                                                                                                                                             {::}
      | tIgualMay                                                                                                                                          {::}
      | tIgualMenor                                                                                                                                        {::}
      | tIgualIgual                                                                                                                                        {::}
	  ;

OP_ARIT ::= tSuma                                                                                                                                          {::}
       | tResta                                                                                                                                            {::}
       | tMult                                                                                                                                             {::}
       | tDiv                                                                                                                                              {::}
       | tMod                                                                                                                                              {::}
	   ;

OP_RAPIDOS ::= OP_RAPIDO_S                                                                                                                                 {::}
          | OP_RAPIDO_R                                                                                                                                    {::}
          ;

OP_RAPIDO_S ::= tId tSuma tSuma                                                                                                                            {::}
            ;

OP_RAPIDO_R ::= tId tResta tResta                                                                                                                          {::}
            ;

TERMINO_1 ::= tId                                                                                                                                          {::}
         | tEntero                                                                                                                                         {::}
         | LLAMADA_FUNC                                                                                                                                    {::}
         | tDecimal                                                                                                                                        {::}
         ;

/* PREGUNTAR COMO SE PUEDE HACER PARA QUE UN TERMINO PUEDA SER UN ENTERO Y UN REAL*/
TERMINO_2 ::= tId                                                                                                                                          {::}
         | tEntero                                                                                                                                         {::}
         | LLAMADA_FUNC                                                                                                                                    {::}
         | tDecimal                                                                                                                                        {::}
         ;

TERMINOLOG_1 ::= tId                                                                                                                                       {::}
         | tTrue                                                                                                                                           {::}
         | tFalse                                                                                                                                          {::}
         | LLAMADA_FUNC                                                                                                                                    {::}
         ;
 
TERMINOLOG_2 ::= tId                                                                                                                                       {::}
         | tTrue                                                                                                                                           {::}
         | tFalse                                                                                                                                          {::}
         | LLAMADA_FUNC                                                                                                                                    {::}
         ;


EXPRESION_ARITM ::= TERMINO_1 OP_ARIT TERMINO_2                                                                                                            {::}
                ;       
               
EXPRESION_LOG ::= TERMINOLOG_1 OP_LOG TERMINOLOG_2                                                                                                         {::}
                ;

EXPRESION ::= tLparen EXPRESION tRparen                                                                                                                    {::}
         | tNot EXPRESION                                                                                                                                  {::}
         | EXPRESION_LOG                                                                                                                                   {::}
         | EXPRESION_ARITM                                                                                                                                 {::}
         | tId                                                                                                                                             {::}
         | tEntero                                                                                                                                         {::}
         | tDecimal                                                                                                                                        {::}
         | tChar                                                                                                                                           {::}
         | tLinea
         | tTrue
         | tFalse                                                                                                                                          {::}
         | LLAMADA_FUNC                                                                                                                                    {::}
		 

LLAMADA_FUNC ::= tId tLparen PARAMETROS tRparen                                                                                                            {::}
                ;

PARAMETROS ::= PARAM_SIMPLE                                                                                                                                {::}
          | PARAM_COMPUESTO                                                                                                                                {::}
		  ;

PARAM_SIMPLE ::= EXPRESION                                                                                                                                 {::}
        ;

PARAM_COMPUESTO ::= PARAMETROS tComa EXPRESION                                                                                                             {::}
    ;