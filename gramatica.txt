PROGRAMA: DECL_VARS DECL_FUNCIONES MAIN 
        | ;

MAIN: main {SENTS};


DECL_VARS: TIPO ID DECL_ESP ASIGN puntocoma DECL_VARS 
         | ;

DECL_ESP: DECL_ARRAY
        | DECL_TUPLA
        | ;

DECL_ARRAY: LCORCHETE RCORCHETE DECL_ARRAY | ; 

DECL_TUPLA: LPAREN TIPO COMA TIPO RPAREN;

REAL_ASIGN: id asignacion EXPRESION puntocoma;

ASIGN: asignacion T_ASIGN 
      | ;

T_ASIGN: ASIGN_NOMAL
        | ASIGN_ARRAY
        | ASIGN_TUPLA;

ASIGN_NORMAL: EXPRESION;

ASIGN_ARRAY: new TIPO DIM_ARRAY

DIM_ARRAY: LCORCHETE EXPRESION RCORCHETE DIM_ARRAY;

ASIGN_TUPLA: new tupla DIM_TUPLA

DIM_TUPLA: LPAREN EXPRESION COMA EXPRESION RPAREN;

ASGN: asignacion EXPRESION |;

TIPO: entero 
    | caracter 
    | float 
    | boleano 
    | tupla 
    | ;

TIPO_ARR: LCORCHETE RCORCHETE TIPO_ESP
        | ;

DECL_FUNCIONES: FUNCION DECL_FUNCIONES 
                | ;

FUNCION: func TIPO TIPO_ARR id  LPAREN PARAMS RPAREN LCORCHETE SENTS RCORCHETE ;

SENTS: SENT SENTS
        |
        ;

SENT: if LPAREN PARAMETROS RPAREN LCORCHETE SENTS RCORCHETE 
    | while LPAREN PARAMETROS RPAREN LCORCHETE SENTS RCORCHETE
    | for LPAREN ID ; EXPRESION ; OP_RAPIDOS RPAREN LCORCHETE SENTS RCORCHETE
    | switch LPAREN ID RPAREN LCORCHETE *poner aqui casos* RCORCHETE
    | DECL_VARS
    | REAL_ASIGN
    | ;


OP: OP_LOG | OP_ARIT;

OPLOG: and 
      | or  
      | > 
      | <
      | >=
      | <=
      | ==; 

OPARIT: +
       | -
       | * 
       | /
       | mod;

OP_RAPIDOS: id ++
          | id --

EXPRESION: (EXPRESION)
          | EXPRESION OPARIT EXPRESION
          | not EXPRESION
          | EXPRESION OPLOG EXPRESION
          | ID
          | LLAMADA_FUNC;

LLAMADA_FUNC: ID (PARAMETROS); 

PARAMETROS: EXPRESION 
            | EXPRESION, PARAMETROS;
